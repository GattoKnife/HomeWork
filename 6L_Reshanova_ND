import Foundation
// 1. 1. Реализовать свой тип коллекции «очередь» (queue) c использованием дженериков:
struct QueueGen<dataType> {
    var list: [dataType] = []
    
    mutating func equeue(_ element: dataType) {
        list.append(element)
    }
    
    mutating func dequeue() {
        if !list.isEmpty {
            list.removeFirst()
        } else {
            print("No more elements to delete")
        }
    }
    //3. * Добавить свой subscript, который будет возвращать nil в случае обращения к несуществующему индексу.
    subscript(index: Int) -> dataType? {
        return index < list.count ? list[index] : nil
    }
}



var animalsList = QueueGen<String>()

animalsList.equeue("Ship")
animalsList.equeue("Tiger")
animalsList.equeue("Lion")
animalsList.equeue("Wolf")
animalsList.equeue("Fox")
print(animalsList.list)
animalsList.dequeue()
print(animalsList.list)

// 2. Добавить ему несколько методов высшего порядка, полезных для этой коллекции (пример: filter для массивов)
var animalSortedList = animalsList.list.sorted() {$0 < $1}
print(animalSortedList)
let animalType = animalSortedList.map { $0 + " is a predator" }
print(animalType)

print(animalsList[4])
if let animalIndex = animalsList[1] {print(animalIndex)} else {print ("No such a index")} // c распаковкой

